package com.agora.need;

import android.app.Activity;
import android.app.SearchManager;
import android.content.Context;
import android.content.Intent;
import android.net.Uri;


import android.os.Handler;
import android.support.v4.view.GravityCompat;
import android.support.v4.widget.DrawerLayout;
import android.support.v7.app.ActionBarDrawerToggle;
import android.os.Bundle;

import android.support.v7.widget.SearchView;
import android.util.Log;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;

import android.view.animation.Animation;
import android.view.animation.AnimationUtils;
import android.widget.ListView;
import android.widget.ProgressBar;
import android.widget.TextView;

import com.agora.R;
import com.agora.app.ActivityToolBarProgress;
import com.agora.app.AppContext;
import com.agora.category.CategoryListActivity;
import com.agora.main.drawer.DrawerItemAdapter;
import com.agora.main.drawer.DrawerItemBuilder;
import com.agora.main.drawer.DrawerItemClickListener;
import com.agora.msg.MessageListActivity;
import com.agora.shell.fab.ActionButton;


public class NeedListActivity extends ActivityToolBarProgress implements  NeedListFragment.OnFragmentInteractionListener {



    private TextView barNotificationMsgNbr;
    private DrawerLayout mDrawerLayout;
    protected ListView mDrawerList;
    private ActionBarDrawerToggle mDrawerToggle;
    private CharSequence mTitle, mDrawerTitle;
    private Activity activity;
    private ActionButton newNeedButton;
    private Animation makeOutAnimation;
    private Animation makeInAnimation;


    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        mTitle = getTitle();
        mDrawerTitle = getTitle();
        activity= this;
        setContentView(R.layout.activity_need_list);
        super.onCreate();
        mDrawerLayout = (DrawerLayout) findViewById(R.id.drawer_layout);
        mDrawerLayout.setDrawerShadow(R.drawable.drawer_shadow,
                GravityCompat.START);
        DrawerItemAdapter adapter = new DrawerItemAdapter(this, R.layout.drawer_item,
                DrawerItemBuilder.getInstance().getItems());
        mDrawerList = (ListView) findViewById(R.id.left_drawer);
        mDrawerList.setAdapter(adapter);
        mDrawerList.setOnItemClickListener(new DrawerItemClickListener(this));
        mDrawerToggle = new ActionBarDrawerToggle(
                this,                  /* host Activity */
                mDrawerLayout,         /* DrawerLayout object */
              //  R.drawable.ic_drawer,  /* nav drawer image to replace 'Up' caret */
                R.string.drawer_open,  /* "open drawer" description for accessibility */
                R.string.drawer_close  /* "close drawer" description for accessibility */
        ) {
            public void onDrawerClosed(View view) {
                getSupportActionBar().setTitle(mTitle);
                //invalidateOptionsMenu(); // creates call to onPrepareOptionsMenu()
            }
            public void onDrawerOpened(View drawerView) {
                getSupportActionBar().setTitle(mDrawerTitle);
                //invalidateOptionsMenu(); // creates call to onPrepareOptionsMenu()
            }
        };

        mDrawerToggle.setHomeAsUpIndicator(R.drawable.ic_drawer);
        // Set the drawer toggle as the DrawerListener
        mDrawerLayout.setDrawerListener(mDrawerToggle);
        this.getSupportActionBar().setDisplayHomeAsUpEnabled(true);
        this.getSupportActionBar().setHomeButtonEnabled(true);
        newNeedButton=(ActionButton)this.findViewById(R.id.bt_new_need);
        makeOutAnimation = AnimationUtils.makeOutAnimation(getBaseContext(), true);
        newNeedButton.setVisibility(View.INVISIBLE);
        makeInAnimation = AnimationUtils.makeInAnimation(getBaseContext(), false);
        newNeedButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                newNeedButton.setVisibility(View.INVISIBLE);
                Intent intent = new Intent(activity, NeedCreateActivity.class);
                //Intent intent = new Intent(activity, CategoryListActivity.class);
                AppContext.attachedImages.clear();
                AppContext.attachedImagesConfirmed=false;
                // Intent intent = new Intent(activity, NeedNeedDescriptionActivity.class);
                //intent.setAction(Intent.ACTION_VIEW);
                activity.startActivity(intent);

            }
        });


        makeInAnimation.setAnimationListener(new Animation.AnimationListener() {
            @Override
            public void onAnimationEnd(Animation animation) {
            }

            @Override
            public void onAnimationRepeat(Animation animation) {
            }

            @Override
            public void onAnimationStart(Animation animation) {
                newNeedButton.setVisibility(View.VISIBLE);
            }
        });


        makeOutAnimation.setAnimationListener(new Animation.AnimationListener() {
            @Override
            public void onAnimationEnd(Animation animation) {
                newNeedButton.setVisibility(View.INVISIBLE);
            }

            @Override
            public void onAnimationRepeat(Animation animation) {
            }

            @Override
            public void onAnimationStart(Animation animation) {
            }

        });

    }

    Handler handler = new Handler();




    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.menu_need_list, menu);
        MenuItem item = menu.findItem(R.id.item_action_messages);
        final View viewNotificationNbr= item.getActionView();
        barNotificationMsgNbr = (TextView) viewNotificationNbr.findViewById(R.id.t_msg_nbr);
        viewNotificationNbr.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                newNeedButton.setVisibility(View.INVISIBLE);
                Intent intent = new Intent(v.getContext(), MessageListActivity.class);
                startActivity(intent);
            }
        });
        updateBarNotificationMsgNbr(3);

        return true;
    }

    public void updateBarNotificationMsgNbr(final int number){
        runOnUiThread(new Runnable() {
            @Override
            public void run() {
                if (number == 0) {
                    barNotificationMsgNbr.setVisibility(View.INVISIBLE);
                } else {
                    barNotificationMsgNbr.setVisibility(View.VISIBLE);
                    barNotificationMsgNbr.setText(Integer.toString(number));
                }
            }
        });
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        final int id = item.getItemId();
        switch (id){
            case R.id.action_settings:
                return true;
            case android.R.id.home:
                if(mDrawerLayout.isDrawerOpen(mDrawerList)) {
                    mDrawerLayout.closeDrawer(mDrawerList);
                }
                else {
                    mDrawerLayout.openDrawer(mDrawerList);
                }
                break;
        }
        return super.onOptionsItemSelected(item);
    }

    @Override
    public boolean onPrepareOptionsMenu(Menu menu) {

        return super.onPrepareOptionsMenu(menu);
    }

    @Override
    public void onFragmentInteraction(Uri uri) {

    }

    @Override
    public void setProgressState(int state) {
        setProgressBarStatus(state);
    }

    @Override
    protected void onPostCreate(Bundle savedInstanceState) {
        super.onPostCreate(savedInstanceState);
        // Sync the toggle state after onRestoreInstanceState has occurred.
        mDrawerToggle.syncState();
      /*  NotificationCompat.Builder mBuilder =
                new NotificationCompat.Builder(this)
                        .setSmallIcon(R.drawable.ic_home_black_24dp)
                        .setContentTitle("My notification")
                        .setContentText("Hello World!");
        SharedPreferences preferences= PreferenceManager.getDefaultSharedPreferences(getApplicationContext());
        if (preferences.getBoolean(AppConfig.PREF_KEY_NOTIF_VIB_NEW_BID,Boolean.FALSE)) {
            mBuilder.setVibrate(new long[]{1000, 1000, 1000, 1000, 1000});
        }

        //LED
       // builder.setLights(Color.RED, 3000, 3000);

        //Ton
       // builder.setSound(Uri.parse("uri://sadfasdfasdf.mp3"));
        NotificationManager notificationManager =
                (NotificationManager) getSystemService(NOTIFICATION_SERVICE);
        notificationManager.notify(0, mBuilder.build());*/
    }

    protected void onResume(){
        super.onResume();
        handler.postDelayed(new Runnable() {
            @Override
            public void run() {
                Log.d("MyCoordinator", "Toggle animation");
                newNeedButton.startAnimation(makeInAnimation);
            }
        }, 500);

    }

    public void onPause(){
        super.onPause();
        newNeedButton.setVisibility(View.INVISIBLE);
    }


}


