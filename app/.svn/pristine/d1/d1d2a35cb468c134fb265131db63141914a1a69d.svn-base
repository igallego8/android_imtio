package com.agora.need;

import android.content.Intent;
import android.graphics.Color;
import android.support.v7.widget.RecyclerView;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;

import com.agora.R;
import com.agora.bid.BidListActivity;
import com.agora.entity.Need;
import com.agora.listener.OnItemTouchListener;
import com.agora.msg.MessageListActivity;
import com.agora.util.BackgroundItemColor;
import com.agora.util.UtilProcess;

import java.util.List;

/**
 * Created by Ivan on 13/09/15.
 */
public class NeedListAdapter extends RecyclerView.Adapter<NeedListAdapter.ViewHolder> {
    private List<Need> mDataset;

    // Provide a reference to the views for each data item
    // Complex data items may need more than one view per item, and
    // you provide access to all the views for a data item in a view holder
    public static class ViewHolder extends RecyclerView.ViewHolder {
        // each data item is just a string in this case
        public View view;
        public ViewHolder(View v) {
            super(v);
            view = v;
        }
    }

    // Provide a suitable constructor (depends on the kind of dataset)
    public NeedListAdapter(List<Need> myDataset, OnItemTouchListener onItemTouchListener) {
        mDataset = myDataset;
    }

    public void setList(List<Need> myDataset){
        this.mDataset=myDataset;
    }

    // Create new views (invoked by the layout manager)
    @Override
    public NeedListAdapter.ViewHolder onCreateViewHolder(ViewGroup parent,
                                                   int viewType) {
        // create a new view
        View v = LayoutInflater.from(parent.getContext())
                .inflate(R.layout.cv_need_item, parent, false);
        // set the view's size, margins, paddings and layout parameters
        //...
        ViewHolder vh = new ViewHolder(v);
        return vh;
    }

    // Replace the contents of a view (invoked by the layout manager)
    @Override
    public void onBindViewHolder(final ViewHolder holder, int position) {
        // - get element from your dataset at this position
        // - replace the contents of the view with that element
       // holder..setText(mDataset[position]);
        TextView t = (TextView) holder.view.findViewById(R.id.need_description);
        t.setText(mDataset.get(position).getDescription());
        BackgroundItemColor color =UtilProcess.getRandomColor();
        RelativeLayout layout = (RelativeLayout) holder.view.findViewById(R.id.layout_icon);
        layout.setBackgroundColor(color.getColor1());
        RelativeLayout layoutSmallIcons = (RelativeLayout) holder.view.findViewById(R.id.layout_icons);
        layoutSmallIcons.setBackgroundColor(color.getColor2());

        ImageButton bidsIconButton=(ImageButton) holder.view.findViewById(R.id.bt_bid_icon);

        bidsIconButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Intent intent= new Intent(v.getContext(), BidListActivity.class);
                v.getContext().startActivity(intent);
            }
        });
        ImageButton msgIconButton=(ImageButton) holder.view.findViewById(R.id.bt_msg_icon);

        msgIconButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Intent intent= new Intent(v.getContext(), MessageListActivity.class);
                v.getContext().startActivity(intent);
            }
        });
        //textIcon.setBackgroundDrawable(UtilProcess.getRoundColorDrawable());


    }

    // Return the size of your dataset (invoked by the layout manager)
    @Override
    public int getItemCount() {
        return mDataset.size();
    }

}
