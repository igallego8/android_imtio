package com.agora.login;

import android.app.Activity;
import android.app.DatePickerDialog;
import android.app.ProgressDialog;
import android.content.Intent;
import android.content.SharedPreferences;
import android.net.Uri;
import android.os.AsyncTask;
import android.os.Bundle;
import android.preference.PreferenceManager;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.DatePicker;
import android.widget.EditText;
import android.widget.Toast;

import com.agora.R;
import com.agora.app.AppConfig;
import com.agora.app.AppContext;
import com.agora.entity.Auth;
import com.agora.entity.User;
import com.agora.main.SplashActivity;
import com.agora.util.DateDialogFragment;
import com.agora.need.NeedListActivity;
import com.agora.util.OnFocusEditTextChangeText;
import com.agora.util.UtilProcess;
import com.google.android.gms.gcm.GoogleCloudMessaging;

import java.io.IOException;
import java.text.ParseException;
import java.util.Calendar;
import java.util.Date;


public class SignUpFragment extends Fragment {

    private EditText name;
    private EditText lastName;
    private EditText email;
    private EditText password;
    private EditText retryPassword;
    private int year;
    private int month;
    private int day;
    private EditText editBirthDate;
    private Date birthDate;
    private Button button;
    private Activity activity;
    private ProgressDialog progress;
    private SharedPreferences settings;
    private GoogleCloudMessaging gcm;
    private AppContext appContext;
    private OnFragmentInteractionListener mListener;


    public static SignUpFragment newInstance(String param1, String param2) {
        SignUpFragment fragment = new SignUpFragment();
        Bundle args = new Bundle();
        fragment.setArguments(args);
        return fragment;
    }

    public SignUpFragment() {
        // Required empty public constructor
    }

    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
    }

    @Override
    public void onViewCreated(final View view,  Bundle savedInstanceState) {
        super.onViewCreated(view, savedInstanceState);
        appContext=(AppContext)view.getContext().getApplicationContext();
        settings=  PreferenceManager.getDefaultSharedPreferences(activity.getApplicationContext());
        editBirthDate = (EditText) view.findViewById(R.id.et_birth_date);
        password = (EditText) view.findViewById(R.id.et_password);
        button= (Button) view.findViewById(R.id.bt_sign_up);
        button.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                boolean isFillOut=false;
                if (password.getText().toString().equals("") || retryPassword.getText().toString().equals("") ||
                        editBirthDate.getText().toString().equals("BIRTH DATE")||
                        name.getText().toString().equals("NAME") ||
                        lastName.getText().toString().equals("LAST NAME") ||
                        email.getText().toString().equals("EMAIL")
                        ) {

                    Toast.makeText(view.getContext(), R.string.sign_up_error, Toast.LENGTH_LONG).show();
                }else if (!retryPassword.getText().toString().equals(password.getText().toString())){
                    Toast.makeText(view.getContext(), R.string.password_error, Toast.LENGTH_LONG).show();
                }else if (!UtilProcess.isValidEmail(email.getText().toString())) {
                    Toast.makeText(view.getContext(), R.string.email_error, Toast.LENGTH_LONG).show();
                }else {

                    new AsyncSignUpTask().execute();
                }
            }
        });
        password.setOnFocusChangeListener(new OnFocusEditTextChangeText(password,R.string.password,activity));
        retryPassword = (EditText) view.findViewById(R.id.et_retry_password);
        retryPassword.setOnFocusChangeListener(new OnFocusEditTextChangeText(retryPassword,R.string.confirm_password,activity));
        name = (EditText) view.findViewById(R.id.et_name);
        name.setOnFocusChangeListener(new OnFocusEditTextChangeText(name,R.string.name,activity));
        lastName = (EditText) view.findViewById(R.id.et_last_name);
        lastName.setOnFocusChangeListener(new OnFocusEditTextChangeText(lastName,R.string.last_name,activity));
        email = (EditText) view.findViewById(R.id.et_email);
        email.setOnFocusChangeListener(new OnFocusEditTextChangeText(email,R.string.email,activity));
        editBirthDate.setOnFocusChangeListener(new View.OnFocusChangeListener() {
            @Override
            public void onFocusChange(View v, boolean hasFocus) {
                if (hasFocus) {
                    DateDialogFragment date = new DateDialogFragment();
                    Calendar calender = Calendar.getInstance();
                    Bundle args = new Bundle();
                    args.putInt("year", calender.get(Calendar.YEAR));
                    args.putInt("month", calender.get(Calendar.MONTH));
                    args.putInt("day", calender.get(Calendar.DAY_OF_MONTH));
                    date.setArguments(args);
                    date.setOnDateSetListener(datePickerListener);
                    date.show(getFragmentManager(), getResources().getString(R.string.title_date_picker));
                }
            }
        });

    }

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container,
                             Bundle savedInstanceState) {
        // Inflate the layout for this fragment
        return inflater.inflate(R.layout.fragment_sign_up, container, false);
    }

    // TODO: Rename method, update argument and hook method into UI event
    public void onButtonPressed(Uri uri) {
        if (mListener != null) {
            mListener.onFragmentInteraction(uri);
        }
    }

    @Override
    public void onAttach(Activity activity) {
        super.onAttach(activity);
        this.activity=activity;
        try {
            mListener = (OnFragmentInteractionListener) activity;
        } catch (ClassCastException e) {
            throw new ClassCastException(activity.toString()
                    + " must implement OnFragmentInteractionListener");
        }
    }

    @Override
    public void onDetach() {
        super.onDetach();
        mListener = null;
    }


    public interface OnFragmentInteractionListener {
        // TODO: Update argument type and name
        public void onFragmentInteraction(Uri uri);
    }


    private DatePickerDialog.OnDateSetListener datePickerListener
            = new DatePickerDialog.OnDateSetListener() {
        // when dialog box is closed, below method will be called.
        public void onDateSet(DatePicker view, int selectedYear,
                              int selectedMonth, int selectedDay) {
            year = selectedYear;
            month = selectedMonth;
            day = selectedDay;
            StringBuilder str= new StringBuilder().append(day)
                    .append("-").append(month+1).append("-").append(year)
                    .append(" ");
            editBirthDate.setText(str.toString());
            try {
                birthDate= AppConfig.dateFormatter.parse(str.toString());
            } catch (ParseException e) {
                e.printStackTrace();
            }
            editBirthDate.clearFocus();


        }
    };



    class AsyncSignUpTask extends AsyncTask<Void, Void, Void> {

        User user;
        Long userKey;
        protected void onPreExecute() {

            progress = ProgressDialog.show(activity, null,
                    getResources().getString(R.string.please_wait), true);
            progress.show();

            user= new User();
            Auth auth= new Auth();
            auth.setId(email.getText().toString());
            auth.setPassword(password.getText().toString());
            user.setEmail(email.getText().toString());
            user.setLastName(lastName.getText().toString());
            user.setName(name.getText().toString());
            user.setAuth(auth);

            //return user;
        }

        @Override
        protected Void doInBackground(Void... params) {
            try{
                if (gcm == null) {
                    gcm = GoogleCloudMessaging.getInstance(activity.getApplicationContext());
                }
                String idGCM = gcm.register(AppConfig.PROJECT_NUMBER);
                user.getAuth().setIdGCM(idGCM);
                userKey=AppConfig.dataProvider.createUser(user);

            } catch (IOException e) {
                e.printStackTrace();
            }
            return null;
        }

        @Override
        protected void onPostExecute(Void aVoid) {

            if (userKey==0L){
                Toast.makeText(SignUpFragment.this.getContext(),"Error al registrar cuenta", Toast.LENGTH_LONG );
            }else{


                Intent intent = new Intent(appContext, SplashActivity.class);
                intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TOP);
                appContext.startActivity(intent);
                getActivity().finish();
                /*SharedPreferences.Editor editor = settings.edit();
                editor.putLong("userKey", userKey);
                editor.putString("userName", user.getName());
                editor.putString("lastName", user.getLastName());
                appContext.setUser(user);
                editor.commit();
                needListIntent();*/
            }
        }
    }



    public void needListIntent(){
        Intent mainIntent = new Intent(activity, NeedListActivity.class);
        activity.startActivity(mainIntent);
        activity.finish();
    }




}
