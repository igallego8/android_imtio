package com.agora.need;

import android.app.NotificationManager;
import android.content.Intent;
import android.content.SharedPreferences;
import android.net.Uri;

import android.preference.PreferenceManager;
import android.support.v4.app.NotificationCompat;
import android.support.v4.view.GravityCompat;
import android.support.v4.widget.DrawerLayout;
import android.support.v7.app.ActionBarDrawerToggle;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;

import android.support.v7.widget.Toolbar;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.widget.ListView;
import android.widget.TextView;

import com.agora.R;
import com.agora.app.AppConfig;
import com.agora.main.drawer.DrawerItemAdapter;
import com.agora.main.drawer.DrawerItemBuilder;
import com.agora.main.drawer.DrawerItemClickListener;
import com.agora.msg.MessageListActivity;

public class NeedListActivity extends AppCompatActivity implements  NeedListFragment.OnFragmentInteractionListener {

   // private RecyclerView mRecyclerView;
   // private RecyclerView.Adapter mAdapter;
    //private RecyclerView.LayoutManager mLayoutManager;
    private Toolbar toolbar;
    private TextView barNotificationMsgNbr;
    private DrawerLayout mDrawerLayout;
    protected ListView mDrawerList;
    private ActionBarDrawerToggle mDrawerToggle;
    private CharSequence mTitle, mDrawerTitle;


    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        mTitle = getTitle();
        mDrawerTitle = getTitle();
        setContentView(R.layout.activity_need_list);
       // mRecyclerView = (RecyclerView) findViewById(R.id.needs_recycler_view);
       // mRecyclerView.setHasFixedSize(true);
       // mLayoutManager = new LinearLayoutManager(this);
        //mRecyclerView.setLayoutManager(mLayoutManager);
        //mAdapter = new NeedListAdapter(DTOBuilder.getNeedArray());
        //mRecyclerView.setAdapter(mAdapter);
        toolbar = (Toolbar) findViewById(R.id.needs_tool_bar); // Attaching the layout to the toolbar object
        setSupportActionBar(toolbar);
        mDrawerLayout = (DrawerLayout) findViewById(R.id.drawer_layout);

        mDrawerLayout.setDrawerShadow(R.drawable.drawer_shadow,
            GravityCompat.START);

        DrawerItemAdapter adapter = new DrawerItemAdapter(this, R.layout.drawer_item,
                DrawerItemBuilder.getInstance().getItems());

      /* NavigationView view = (NavigationView) findViewById(R.id.navigation);
        view.setNavigationItemSelectedListener(new NavigationView.OnNavigationItemSelectedListener() {
            @Override public boolean onNavigationItemSelected(MenuItem menuItem) {
              //  Snackbar.make(content, menuItem.getTitle() + " pressed", Snackbar.LENGTH_LONG).show();
               // menuItem.setChecked(true);
               // mDrawerLayout.closeDrawers();
                return true;
            }
        });*/
        mDrawerList = (ListView) findViewById(R.id.left_drawer);
        mDrawerList.setAdapter(adapter);
        mDrawerList.setOnItemClickListener(new DrawerItemClickListener(this));

        mDrawerToggle = new ActionBarDrawerToggle(
                this,                  /* host Activity */
                mDrawerLayout,         /* DrawerLayout object */
              //  R.drawable.ic_drawer,  /* nav drawer image to replace 'Up' caret */
                R.string.drawer_open,  /* "open drawer" description for accessibility */
                R.string.drawer_close  /* "close drawer" description for accessibility */
        ) {
            public void onDrawerClosed(View view) {

                getSupportActionBar().setTitle(mTitle);
                //invalidateOptionsMenu(); // creates call to onPrepareOptionsMenu()
            }

            public void onDrawerOpened(View drawerView) {
                getSupportActionBar().setTitle(mDrawerTitle);
                //invalidateOptionsMenu(); // creates call to onPrepareOptionsMenu()
            }
        };

        mDrawerToggle.setHomeAsUpIndicator(R.drawable.ic_drawer);
        // Set the drawer toggle as the DrawerListener
        mDrawerLayout.setDrawerListener(mDrawerToggle);

        this.getSupportActionBar().setDisplayHomeAsUpEnabled(true);
        this.getSupportActionBar().setHomeButtonEnabled(true);


    }

    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.menu_need_list, menu);
        MenuItem item = menu.findItem(R.id.item_action_messages);
        final View viewNotificationNbr= item.getActionView();
        barNotificationMsgNbr = (TextView) viewNotificationNbr.findViewById(R.id.t_msg_nbr);
        viewNotificationNbr.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Intent intent = new Intent(v.getContext(), MessageListActivity.class);
                startActivity(intent);
            }
        });
        updateBarNotificationMsgNbr(3);
        return true;
    }

    public void updateBarNotificationMsgNbr(final int number){
        runOnUiThread(new Runnable() {
            @Override
            public void run() {
                if (number == 0){
                    barNotificationMsgNbr.setVisibility(View.INVISIBLE);
                }else{
                    barNotificationMsgNbr.setVisibility(View.VISIBLE);
                    barNotificationMsgNbr.setText(Integer.toString(number));
                }
            }
        });
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        // Handle action bar item clicks here. The action bar will
        // automatically handle clicks on the Home/Up button, so long
        // as you specify a parent activity in AndroidManifest.xml.
        final int id = item.getItemId();

        //noinspection SimplifiableIfStatement

        switch (id){
            case R.id.action_settings:
                return true;
            case android.R.id.home:
                if(mDrawerLayout.isDrawerOpen(mDrawerList)) {
                    mDrawerLayout.closeDrawer(mDrawerList);
                }
                else {
                    mDrawerLayout.openDrawer(mDrawerList);
                }
                break;
        }


        return super.onOptionsItemSelected(item);
    }

    @Override
    public void onFragmentInteraction(Uri uri) {

    }

    @Override
    protected void onPostCreate(Bundle savedInstanceState) {
        super.onPostCreate(savedInstanceState);
        // Sync the toggle state after onRestoreInstanceState has occurred.
        mDrawerToggle.syncState();
      /*  NotificationCompat.Builder mBuilder =
                new NotificationCompat.Builder(this)
                        .setSmallIcon(R.drawable.ic_home_black_24dp)
                        .setContentTitle("My notification")
                        .setContentText("Hello World!");
        SharedPreferences preferences= PreferenceManager.getDefaultSharedPreferences(getApplicationContext());
        if (preferences.getBoolean(AppConfig.PREF_KEY_NOTIF_VIB_NEW_BID,Boolean.FALSE)) {
            mBuilder.setVibrate(new long[]{1000, 1000, 1000, 1000, 1000});
        }

        //LED
       // builder.setLights(Color.RED, 3000, 3000);

        //Ton
       // builder.setSound(Uri.parse("uri://sadfasdfasdf.mp3"));
        NotificationManager notificationManager =
                (NotificationManager) getSystemService(NOTIFICATION_SERVICE);
        notificationManager.notify(0, mBuilder.build());*/
    }

    protected void onResume(){
        super.onResume();

    }

}


